{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Gauge.js\";\nimport React from \"react\";\nimport { arc } from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport { format } from \"d3-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gauge = ({\n  value,\n  min,\n  max,\n  label,\n  units\n}) => {\n  const backgroundArc = arc().innerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(Math.PI / 2).cornerRadius(1)();\n  const percentScale = scaleLinear().domain([min, max]).range([0, 1]);\n  const percent = percentScale(value);\n  const angleScale = scaleLinear().domain([0, 1]).range([-Math.PI / 2, Math.PI / 2]).clamp(true);\n  const angle = angleScale(percent);\n  const filledArc = arc().innerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(angle).cornerRadius(1)();\n  const colorScale = scaleLinear().domain([0, 1]).range([\"#dbdbe7\", \"#4834d4\"]);\n  const gradientSteps = colorScale.ticks(10).map(value => colorScale(value));\n  const markerLocation = getCoordsOnArc(angle, 1 - (1 - 0.65) / 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        overflow: \"visible\"\n      },\n      width: \"9em\" // overall width \n      ,\n      viewBox: [-1, -1, 2, 1].join(\" \"),\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"Gauge__gradient\",\n          gradientUnits: \"userSpaceOnUse\",\n          x1: \"-1\",\n          x2: \"1\" // gradient depth in the bar\n          ,\n          y2: \"0\",\n          children: gradientSteps.map((color, index) => /*#__PURE__*/_jsxDEV(\"stop\", {\n            stopColor: color,\n            offset: `${index / (gradientSteps.length - 1)}`\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: backgroundArc,\n        fill: \"#dbdbe7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: filledArc,\n        fill: \"url(#Gauge__gradient)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        y1: \"-1\",\n        y2: \"-0.65\",\n        stroke: \"white\",\n        strokeWidth: \"0.027\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: markerLocation[0],\n        cy: markerLocation[1],\n        r: \"0.2\",\n        stroke: \"#2c3e50\",\n        strokeWidth: \"0.01\",\n        fill: colorScale(percent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M0.136364 0.0290102C0.158279 -0.0096701 0.219156 -0.00967009 0.241071 0.0290102C0.297078 0.120023 0.375 0.263367 0.375 0.324801C0.375 0.422639 0.292208 0.5 0.1875 0.5C0.0852272 0.5 -1.8346e-08 0.422639 -9.79274e-09 0.324801C0.00243506 0.263367 0.0803571 0.120023 0.136364 0.0290102ZM0.1875 0.381684C0.221591 0.381684 0.248377 0.356655 0.248377 0.324801C0.248377 0.292947 0.221591 0.267918 0.1875 0.267918C0.153409 0.267918 0.126623 0.292947 0.126623 0.324801C0.126623 0.356655 0.155844 0.381684 0.1875 0.381684Z\",\n        transform: `rotate(${angle * (180 / Math.PI)}) translate(-0.2, -0.33)`,\n        fill: \"#6a6a85\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"0.1em\",\n        fontSize: \"3em\",\n        lineHeight: \"0.5em\",\n        fontWeight: \"900\",\n        fontFeatureSettings: \"'zero', 'tnum' 1\"\n      },\n      children: format(\",\")(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), !!label && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#8b8ba7\",\n        // color of label 'meter'\n        marginTop: \"0.6em\",\n        fontSize: \"1.3em\",\n        lineHeight: \"0.3em\",\n        fontWeight: \"700\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), !!units && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#8b8ba7\",\n        lineHeight: \"0.3em\",\n        fontWeight: \"300\"\n      },\n      children: units\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Gauge;\n\nconst getCoordsOnArc = (angle, offset = 10) => [Math.cos(angle - Math.PI / 2) * offset, Math.sin(angle - Math.PI / 2) * offset];\n\nexport default Gauge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gauge\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Gauge.js"],"names":["React","arc","scaleLinear","format","Gauge","value","min","max","label","units","backgroundArc","innerRadius","outerRadius","startAngle","Math","PI","endAngle","cornerRadius","percentScale","domain","range","percent","angleScale","clamp","angle","filledArc","colorScale","gradientSteps","ticks","map","markerLocation","getCoordsOnArc","textAlign","overflow","join","color","index","length","marginTop","fontSize","lineHeight","fontWeight","fontFeatureSettings","offset","cos","sin"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { arc } from \"d3-shape\"\nimport { scaleLinear } from \"d3-scale\"\nimport { format } from \"d3-format\"\nconst Gauge = ({\n  value,\n  min,\n  max,\n  label,\n  units,\n}) => {\n  const backgroundArc = arc()\n    .innerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(Math.PI / 2)\n    .cornerRadius(1)\n    ()\n  const percentScale = scaleLinear()\n    .domain([min, max])\n    .range([0, 1])\n  const percent = percentScale(value)\n  const angleScale = scaleLinear()\n    .domain([0, 1])\n    .range([-Math.PI / 2, Math.PI / 2])\n    .clamp(true)\n  const angle = angleScale(percent)\n  const filledArc = arc()\n    .innerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(angle)\n    .cornerRadius(1)\n    ()\n  const colorScale = scaleLinear()\n    .domain([0, 1])\n    .range([\"#dbdbe7\", \"#4834d4\"])\n  const gradientSteps = colorScale.ticks(10)\n    .map(value => colorScale(value))\n  const markerLocation = getCoordsOnArc(\n    angle,\n    1 - ((1 - 0.65) / 2),\n  )\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n      }}>\n      <svg style={{overflow: \"visible\"}}\n        width=\"9em\" // overall width \n        viewBox={[\n          -1, -1,\n          2, 1,\n        ].join(\" \")}>\n        <defs>\n          <linearGradient\n            id=\"Gauge__gradient\"\n            gradientUnits=\"userSpaceOnUse\"\n            x1=\"-1\"\n            x2=\"1\" // gradient depth in the bar\n            y2=\"0\">\n            {gradientSteps.map((color, index) => (\n              <stop\n                key={color}\n                stopColor={color}\n                offset={`${\n                  index\n                  / (gradientSteps.length - 1)\n                }`}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <path\n          d={backgroundArc}\n          fill=\"#dbdbe7\"\n        />\n        <path\n          d={filledArc}\n          fill=\"url(#Gauge__gradient)\"\n        />\n        <line\n          y1=\"-1\"\n          y2=\"-0.65\"\n          stroke=\"white\"\n          strokeWidth=\"0.027\"\n        />\n        <circle\n          cx={markerLocation[0]}\n          cy={markerLocation[1]}\n          r=\"0.2\"\n          stroke=\"#2c3e50\"\n          strokeWidth=\"0.01\"\n          fill={colorScale(percent)}\n        />\n        <path\n          d=\"M0.136364 0.0290102C0.158279 -0.0096701 0.219156 -0.00967009 0.241071 0.0290102C0.297078 0.120023 0.375 0.263367 0.375 0.324801C0.375 0.422639 0.292208 0.5 0.1875 0.5C0.0852272 0.5 -1.8346e-08 0.422639 -9.79274e-09 0.324801C0.00243506 0.263367 0.0803571 0.120023 0.136364 0.0290102ZM0.1875 0.381684C0.221591 0.381684 0.248377 0.356655 0.248377 0.324801C0.248377 0.292947 0.221591 0.267918 0.1875 0.267918C0.153409 0.267918 0.126623 0.292947 0.126623 0.324801C0.126623 0.356655 0.155844 0.381684 0.1875 0.381684Z\"\n          transform={`rotate(${\n            angle * (180 / Math.PI)\n          }) translate(-0.2, -0.33)`}\n          fill=\"#6a6a85\"\n        />\n      </svg>\n      <div style={{\n        marginTop: \"0.1em\",\n        fontSize: \"3em\",\n        lineHeight: \"0.5em\",\n        fontWeight: \"900\",\n        fontFeatureSettings: \"'zero', 'tnum' 1\",\n      }}>\n        { format(\",\")(value) }\n      </div>\n      {!!label && (\n        <div style={{\n          color: \"#8b8ba7\", // color of label 'meter'\n          marginTop: \"0.6em\",\n          fontSize: \"1.3em\",\n          lineHeight: \"0.3em\",\n          fontWeight: \"700\",\n        }}>\n          { label }\n        </div>\n      )}\n      {!!units && (\n        <div style={{\n          color: \"#8b8ba7\",\n          lineHeight: \"0.3em\",\n          fontWeight: \"300\",\n        }}>\n          { units }\n        </div>\n      )}\n    </div>\n  )\n}\nconst getCoordsOnArc = (angle, offset=10) => [\n  Math.cos(angle - (Math.PI / 2)) * offset,\n  Math.sin(angle - (Math.PI / 2)) * offset,\n]\n\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}