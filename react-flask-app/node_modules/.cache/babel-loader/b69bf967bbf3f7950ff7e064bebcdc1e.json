{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./form.css\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    setLoading(true);\n    console.log(\"button clicked\");\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    };\n    axios.post(\"http://localhost:5000/process\", {\n      text: text\n    }, config).then(res => {\n      console.log(\"res\", res);\n      setFetchedData(res.data);\n      setLoading(false);\n    }).catch(er => {\n      console.log(er.response.data);\n      setLoading(false);\n    });\n  };\n\n  function displayLength() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length, \" characters!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return !isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Speech Analyzer Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"gitbox\",\n        href: \"http://www.google.com\",\n        children: [/*#__PURE__*/_jsxDEV(FaGithub, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \"GitHub\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mainlabel\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Input text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"text\",\n            value: text,\n            onChange: e => setText(e.target.value),\n            cols: 60,\n            rows: 7,\n            placeholder: \"Enter min 300 -> max 5000 chars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sb\",\n            disabled: text.length <= 300,\n            maxlength: \"5000\",\n            style: {\n              opacity: `${text.length <= 300 ? \"0.7\" : \"1\"}`,\n              cursor: `${text.length <= 300 ? \"not-allowed\" : \"pointer\"}`\n            },\n            type: \"submit\",\n            name: \"Submit\",\n            value: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), displayLength()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n    pathos: fetchedData.pathos,\n    logos: fetchedData.logos,\n    ethos: fetchedData.ethos,\n    subj_score: fetchedData.subj_score,\n    num_questions: fetchedData.num_questions,\n    phrases_array: fetchedData.phrases,\n    avg_len: fetchedData.avg_len,\n    uncommon: fetchedData.uncommon_percent,\n    repeats: fetchedData.repeats,\n    count_ands: fetchedData.count_and,\n    i_versus_we: fetchedData.i_versus_we\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewForm, \"EeycbZGVUQD3QknABS9CFuuIn2Y=\");\n\n_c = NewForm;\nexport default NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js"],"names":["React","useState","axios","Button","TextField","Dashboard","LoadingSpinner","FaGithub","NewForm","text","setText","fetchedData","setFetchedData","isSubmitted","setSubmitted","isLoading","setLoading","handleSubmit","e","preventDefault","console","log","config","headers","post","then","res","data","catch","er","response","displayLength","length","target","value","opacity","cursor","pathos","logos","ethos","subj_score","num_questions","phrases","avg_len","uncommon_percent","repeats","count_and","i_versus_we"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nimport \"./form.css\";\nimport { FaGithub } from \"react-icons/fa\";\n\nfunction NewForm() {\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    setLoading(true);\n\n    console.log(\"button clicked\");\n\n    const config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    axios\n      .post(\n        \"http://localhost:5000/process\",\n        {\n          text: text,\n        },\n        config\n      )\n      .then((res) => {\n        console.log(\"res\", res);\n        setFetchedData(res.data);\n        setLoading(false);\n      })\n      .catch((er) => {\n        console.log(er.response.data);\n        setLoading(false);\n      });\n  };\n\n  function displayLength() {\n    return (\n      <div>\n        <p>{text.length} characters!</p>\n      </div>\n    );\n  }\n\n  return !isSubmitted ? (\n    <div className=\"main-div\">\n      <div className=\"form-header\">\n        <p>Speech Analyzer Tool</p>\n        <a className=\"gitbox\" href=\"http://www.google.com\">\n          <FaGithub />\n          GitHub\n        </a>\n      </div>\n      <div className=\"container-box\">\n        <div className=\"box\">\n          <form onSubmit={handleSubmit} method=\"post\">\n            <label className=\"mainlabel\"><strong>Input text:</strong></label>\n            <textarea\n              name=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              cols={60}\n              rows={7}\n              placeholder=\"Enter min 300 -> max 5000 chars\"\n            ></textarea>\n            <br />\n            <input\n              id=\"sb\"\n              disabled={text.length <= 300}\n              maxlength=\"5000\"\n              style={{\n                opacity: `${text.length <= 300 ? \"0.7\" : \"1\"}`,\n                cursor: `${text.length <= 300 ? \"not-allowed\" : \"pointer\"}`,\n                }}\n              type=\"submit\"\n              name=\"Submit\"\n              value=\"SUBMIT\"\n            />\n          </form>\n          {displayLength()}\n        </div>\n      </div>\n    </div>\n  ) : isLoading ? (\n    <LoadingSpinner />\n  ) : (\n    <Dashboard\n      pathos={fetchedData.pathos}\n      logos={fetchedData.logos}\n      ethos={fetchedData.ethos}\n      subj_score={fetchedData.subj_score}\n      num_questions={fetchedData.num_questions}\n      phrases_array={fetchedData.phrases}\n      avg_len={fetchedData.avg_len}\n      uncommon={fetchedData.uncommon_percent}\n      repeats={fetchedData.repeats}\n      count_ands={fetchedData.count_and}\n      i_versus_we={fetchedData.i_versus_we}\n    />\n  );\n}\n\nexport default NewForm;"]},"metadata":{},"sourceType":"module"}