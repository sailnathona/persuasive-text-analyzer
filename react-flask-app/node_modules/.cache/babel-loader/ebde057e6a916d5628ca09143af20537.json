{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js\";\nimport React from 'react';\nimport TagCloud from 'react-tag-cloud';\nimport randomColor from 'randomcolor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar wordsArray = ['text', 'mistake', 'laptop']; // // var newArray = wordsArray.map(myFunction)\n// // function myFunction(string) {\n// //     return {text: string, value: randomIntFromInterval(20, 65)}\n// // }\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n} // function WordCloud({phrases}) {\n//   // if (phrases) {\n//   //   var newArray = phrases.map(string => {\n//   //     return {text: string, value: randomIntFromInterval(20, 65)}\n//   //   });\n//   // }\n//   // else {\n//   //   return <div>....is loading</div>\n//   // }\n//   return <ReactWordcloud options={options} words={wordsArray} />\n// }\n\n\nfunction WordCloud({\n  phrases\n}) {\n  if (phrases) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TagCloud, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontSize: randomIntFromInterval(),\n          fontWeight: 'bold',\n          fontStyle: 'italic',\n          color: () => randomColor(),\n          padding: 5,\n          width: '100%',\n          height: '100%'\n        },\n        children: phrases.map(string => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_c = WordCloud;\nexport default WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js"],"names":["React","TagCloud","randomColor","wordsArray","randomIntFromInterval","min","max","Math","floor","random","WordCloud","phrases","fontFamily","fontSize","fontWeight","fontStyle","color","padding","width","height","map","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAGA,IAAIC,UAAU,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAjB,C,CACA;AAEA;AACA;AACA;;AAGA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AAAE;AACvC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,C,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,SAASK,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AAC5B,MAAIA,OAAJ,EAAa;AACb,wBACC;AAAA,6BACM,QAAC,QAAD;AACC,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,YADP;AAELC,UAAAA,QAAQ,EAAET,qBAAqB,EAF1B;AAGLU,UAAAA,UAAU,EAAE,MAHP;AAILC,UAAAA,SAAS,EAAE,QAJN;AAKLC,UAAAA,KAAK,EAAE,MAAMd,WAAW,EALnB;AAMLe,UAAAA,OAAO,EAAE,CANJ;AAOLC,UAAAA,KAAK,EAAE,MAPF;AAQLC,UAAAA,MAAM,EAAE;AARH,SADR;AAAA,kBAWIR,OAAO,CAACS,GAAR,CAAYC,MAAM,iBACd;AAAA,oBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,gBADJ;AAXJ;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADD;AAmBD;AACA;;KAtBQX,S;AAyBT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport TagCloud from 'react-tag-cloud';\nimport randomColor from 'randomcolor';\n\n\nvar wordsArray = ['text', 'mistake', 'laptop']\n// // var newArray = wordsArray.map(myFunction)\n\n// // function myFunction(string) {\n// //     return {text: string, value: randomIntFromInterval(20, 65)}\n// // }\n\n\nfunction randomIntFromInterval(min, max) { // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n \n// function WordCloud({phrases}) {\n//   // if (phrases) {\n//   //   var newArray = phrases.map(string => {\n//   //     return {text: string, value: randomIntFromInterval(20, 65)}\n//   //   });\n//   // }\n//   // else {\n//   //   return <div>....is loading</div>\n//   // }\n//   return <ReactWordcloud options={options} words={wordsArray} />\n\n// }\n\nfunction WordCloud({phrases}) {\n  if (phrases) {\n  return (\n   <div>\n         <TagCloud\n          style={{\n            fontFamily: 'sans-serif',\n            fontSize: randomIntFromInterval(),\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n            color: () => randomColor(),\n            padding: 5,\n            width: '100%',\n            height: '100%'\n          }}>\n            {phrases.map(string => (\n                 <div>{string}</div>\n      ))}\n        </TagCloud>\n    </div>\n  );\n}\n}\n\n\nexport default WordCloud;"]},"metadata":{},"sourceType":"module"}