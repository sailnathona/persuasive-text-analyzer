{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  useEffect(() => {\n    fetch('/hello').then(res => res.json()).then(data => {\n      setPlaceholder(data.result);\n    });\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"making request\");\n    alert(e.target.value); //   fetchData()\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    action: \"{{ url_for('hello') }}\",\n    method: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Text :\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        rows: 5,\n        cols: 5,\n        placeholder: \"Enter up to 500 words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      name: \"Submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Form, \"kgraK1k0jDLvJzZaQizHvpfztZ4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js"],"names":["React","useState","Form","props","text","setText","useEffect","fetch","then","res","json","data","setPlaceholder","result","fetchData","handleSubmit","e","preventDefault","console","log","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACJC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EACoBF,IADpB,CACyBG,IAAI,IAAI;AACjCC,MAAAA,cAAc,CAACD,IAAI,CAACE,MAAN,CAAd;AACC,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,KAAK,CAACJ,CAAC,CAACK,MAAF,CAASC,KAAV,CAAL,CAHwB,CAI1B;AACC,GALD;;AAQA,sBACG;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAA8B,IAAA,MAAM,EAAC,wBAArC;AAA8D,IAAA,MAAM,EAAC,MAArE;AAAA,4BACE;AAAA,8CACE;AACC,QAAA,IAAI,EAAE,MADP;AAEC,QAAA,KAAK,EAAEX,IAFR;AAGC,QAAA,QAAQ,EAAEY,CAAC,IAAIX,OAAO,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAHvB;AAIC,QAAA,IAAI,EAAE,CAJP;AAKC,QAAA,IAAI,EAAE,CALP;AAMC,QAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAgBD;;GAtCMpB,I;;KAAAA,I;AAwCP,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction Form(props) {\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        fetch('/hello').\n    then(res => res.json()).then(data => {\n        setPlaceholder(data.result);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"making request\")\n      alert(e.target.value);\n    //   fetchData()\n    };\n\n  \n    return (\n       <form onSubmit={handleSubmit} action=\"{{ url_for('hello') }}\" method=\"post\">\n         <label>Enter Text :\n           <textarea \n            name= \"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            rows={5}\n            cols={5} \n            placeholder=\"Enter up to 500 words\"\n          />\n         </label>\n         <br />\n         <button type=\"submit\" name=\"Submit\" >SUBMIT</button>\n       </form>\n     );\n  }\n\n  export default Form;\n"]},"metadata":{},"sourceType":"module"}