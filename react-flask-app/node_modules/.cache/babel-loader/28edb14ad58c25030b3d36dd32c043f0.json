{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [text, setText] = useState(''); // or use state and do the useEffect here for form data processing\n  // const [placeholder, setPlaceholder] = useState('Hi');\n  //   useEffect(() => {\n  //     fetch('/hello').then(res => res.json()).then(data => {\n  //       setPlaceholder(data.result);\n  //     });\n  //   }, []);\n  // useEffect(() => {\n  //     fetchData()\n  //   }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault(); //   alert(nameEl.current.value);\n    //   fetchData()\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Text :\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        rows: 5,\n        cols: 5,\n        placeholder: \"Enter up to 500 words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      name: \"Submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Form, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js"],"names":["React","useState","useEffect","Form","props","text","setText","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CADiB,CAGjB;AAEA;AAEJ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEI,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAE1B;AACA;AACC,GAJD;;AAMA,sBACG;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,4BACE;AAAA,8CACE;AACC,QAAA,KAAK,EAAEF,IADR;AAEC,QAAA,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAFvB;AAGC,QAAA,IAAI,EAAE,CAHP;AAIC,QAAA,IAAI,EAAE,CAJP;AAKC,QAAA,WAAW,EAAC;AALb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAeD;;GAtCMR,I;;KAAAA,I;AAwCP,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction Form(props) {\n    const [text, setText] = useState('');\n\n    // or use state and do the useEffect here for form data processing\n\n    // const [placeholder, setPlaceholder] = useState('Hi');\n\n//   useEffect(() => {\n//     fetch('/hello').then(res => res.json()).then(data => {\n//       setPlaceholder(data.result);\n//     });\n//   }, []);\n\n// useEffect(() => {\n//     fetchData()\n//   }, [])\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n    //   alert(nameEl.current.value);\n    //   fetchData()\n    };\n  \n    return (\n       <form onSubmit={handleSubmit}>\n         <label>Enter Text :\n           <textarea \n            value={text}\n            onChange={e => setText(e.target.value)}\n            rows={5}\n            cols={5} \n            placeholder=\"Enter up to 500 words\"\n          />\n         </label>\n         <br />\n         <button type=\"submit\" name=\"Submit\" >SUBMIT</button>\n       </form>\n     );\n  }\n\n  export default Form;\n"]},"metadata":{},"sourceType":"module"}