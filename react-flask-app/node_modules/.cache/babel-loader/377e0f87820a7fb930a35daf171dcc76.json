{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/PieChart1.js\";\nimport React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nfunction PieChart1({\n  uncommon,\n  repeats\n}) {\n  // value will need to be percent of uncommon words\n  const data01 = [{\n    name: \"Uncommon Words\",\n    value: {\n      uncommon\n    }\n  }];\n  let valu_uncommon = data01[0][\"value\"];\n  let remaining = {\n    name: \"Remainder\",\n    value: 100 - valu_uncommon\n  };\n  data01.push(remaining); // value will need to be percent of repeated words\n\n  const data02 = [{\n    name: \"% uncommon repeats\",\n    value: {\n      repeats\n    }\n  }];\n  let valuRepeats = data02[0][\"value\"];\n  let totalUncommon = {\n    name: \"Remainder\",\n    value: 100 - valuRepeats\n  };\n  data02.push(totalUncommon);\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 800,\n    height: 400,\n    onMouseEnter: this.onPieEnter,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: data01,\n      dataKey: \"value\",\n      cx: 180,\n      cy: 200,\n      outerRadius: 50,\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: data02,\n      cx: 180,\n      cy: 200,\n      innerRadius: 60,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      paddingAngle: 5,\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PieChart1;\nexport default PieChart1;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart1\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/PieChart1.js"],"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","Legend","COLORS","PieChart1","uncommon","repeats","data01","name","value","valu_uncommon","remaining","push","data02","valuRepeats","totalUncommon","onPieEnter","data","map","entry","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,mBALF,EAMEC,MANF,QAOO,UAPP;;AAUA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAA0C;AAExC;AACF,QAAMC,MAAM,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAEJ,MAAAA;AAAF;AAAjC,GAAD,CAAf;AAEA,MAAIK,aAAa,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAU,OAAV,CAApB;AACA,MAAII,SAAS,GAAG;AAAEH,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,KAAK,EAAE,MAAMC;AAAlC,GAAhB;AAEAH,EAAAA,MAAM,CAACK,IAAP,CAAYD,SAAZ,EAR0C,CAU1C;;AACA,QAAME,MAAM,GAAG,CAAC;AAAEL,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF;AAArC,GAAD,CAAf;AAEA,MAAIQ,WAAW,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAU,OAAV,CAAlB;AACA,MAAIE,aAAa,GAAG;AAAEP,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,KAAK,EAAE,MAAMK;AAAlC,GAApB;AAEAD,EAAAA,MAAM,CAACD,IAAP,CAAYG,aAAZ;AACE,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAmC,IAAA,YAAY,EAAE,KAAKC,UAAtD;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAET,MADR;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,EAAE,EAAE,GAHN;AAIE,MAAA,EAAE,EAAE,GAJN;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AACE,MAAA,IAAI,EAAEM,MADR;AAEE,MAAA,EAAE,EAAE,GAFN;AAGE,MAAA,EAAE,EAAE,GAHN;AAIE,MAAA,WAAW,EAAE,EAJf;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,YAAY,EAAE,CAPhB;AAQE,MAAA,OAAO,EAAC,OARV;AAAA,gBAUGI,IAAI,CAACC,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAA4B,QAAA,IAAI,EAAEjB,MAAM,CAACiB,KAAK,GAAGjB,MAAM,CAACkB,MAAhB;AAAxC,SAAY,QAAOD,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YATF,eAuBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;KA5CQhB,S;AA8CT,eAAeA,SAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Sector,\n  Cell,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\n\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nfunction PieChart1({ uncommon, repeats }) {\n\n  // value will need to be percent of uncommon words\nconst data01 = [{ name: \"Uncommon Words\", value: { uncommon } }];\n\nlet valu_uncommon = data01[0][\"value\"];\nlet remaining = { name: \"Remainder\", value: 100 - valu_uncommon };\n\ndata01.push(remaining);\n\n// value will need to be percent of repeated words\nconst data02 = [{ name: \"% uncommon repeats\", value: { repeats } }];\n\nlet valuRepeats = data02[0][\"value\"];\nlet totalUncommon = { name: \"Remainder\", value: 100 - valuRepeats };\n\ndata02.push(totalUncommon);\n  return (\n    <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n      <Pie\n        data={data01}\n        dataKey=\"value\"\n        cx={180}\n        cy={200}\n        outerRadius={50}\n        fill=\"#8884d8\"\n      />\n      <Pie\n        data={data02}\n        cx={180}\n        cy={200}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        paddingAngle={5}\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Legend />\n    </PieChart>\n  );\n}\n\nexport default PieChart1;\n"]},"metadata":{},"sourceType":"module"}