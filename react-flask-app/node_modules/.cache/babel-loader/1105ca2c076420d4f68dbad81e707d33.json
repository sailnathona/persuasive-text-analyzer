{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  fetch('https://localhost:5000', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => response.json()).then(data => {\n    console.log('Success:', data);\n  }).catch(error => {\n    console.error('Error:', error);\n  }); // useEffect(() => {\n  //     fetch('/').then(res => res.json()).then(data => {\n  //     setText(data.result);\n  //     });\n  // }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"making request\");\n    alert(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    action: \"http://localhost:5000\",\n    method: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Text :\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        rows: 5,\n        cols: 20,\n        placeholder: \"Enter up to 500 words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      name: \"Submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Form, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/Form.js"],"names":["React","useState","useEffect","Form","props","text","setText","fetch","method","headers","body","JSON","stringify","data","then","response","json","console","log","catch","error","handleSubmit","e","preventDefault","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAM,EAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC5BC,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFmB;AAG5BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;AAHsB,GAA3B,CAAL,CAGoCC,IAHpC,CAGyCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHrD,EAGuEF,IAHvE,CAG4ED,IAAI,IAChF;AAAEI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,IAAxB;AAAgC,GAJlC,EAIqCM,KAJrC,CAI4CC,KAAD,IAAW;AAAEH,IAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AAAiC,GAJzF,EAHiB,CASjB;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAM,IAAAA,KAAK,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAL;AACD,GAJD;;AAOA,sBACG;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAA8B,IAAA,MAAM,EAAC,uBAArC;AAA6D,IAAA,MAAM,EAAC,MAApE;AAAA,4BACE;AAAA,8CACE;AACC,QAAA,IAAI,EAAE,MADP;AAEC,QAAA,KAAK,EAAEhB,IAFR;AAGC,QAAA,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACG,MAAF,CAASC,KAAV,CAHvB;AAIC,QAAA,IAAI,EAAE,CAJP;AAKC,QAAA,IAAI,EAAE,EALP;AAMC,QAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAgBD;;GAtCMvB,I;;KAAAA,I;AAwCP,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction Form(props) {\n    const [text, setText] = useState('');\n\n    fetch('https://localhost:5000', { \n        method: 'POST', \n        headers: { 'Content-Type': 'application/json', }, \n        body: JSON.stringify(data), }) .then(response => response.json()) .then(data => \n    { console.log('Success:', data); }) .catch((error) => { console.error('Error:', error); });\n\n    // useEffect(() => {\n    //     fetch('/').then(res => res.json()).then(data => {\n    //     setText(data.result);\n    //     });\n    // }, []);\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"making request\")\n      alert(e.target.value);\n    };\n\n  \n    return (\n       <form onSubmit={handleSubmit} action=\"http://localhost:5000\" method=\"post\">\n         <label>Enter Text :\n           <textarea \n            name= \"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            rows={5}\n            cols={20} \n            placeholder=\"Enter up to 500 words\"\n          />\n         </label>\n         <br />\n         <button type=\"submit\" name=\"Submit\" >SUBMIT</button>\n       </form>\n     );\n  }\n\n  export default Form;\n"]},"metadata":{},"sourceType":"module"}