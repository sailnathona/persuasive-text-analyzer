{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js\";\nimport React from 'react';\nimport ReactWordcloud from 'react-wordcloud'; // var wordsArray = ['text', 'mistake', 'thought', 'bad']\n// var newArray = wordsArray.map(myFunction)\n// function myFunction(string) {\n//     return {text: string, value: randomIntFromInterval(20, 65)}\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst options = {\n  rotations: 0 // rotationAngles: [-90, 0],\n\n};\n\nfunction WordCloud({\n  phrases\n}) {\n  if (phrases) {\n    // var newArray= phrases.map(myFunction) \n    var newArray = phrases.map(string => {\n      return {\n        text: string,\n        value: randomIntFromInterval(20, 65)\n      };\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"....is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n    options: \"options\",\n    words: newArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_c = WordCloud;\nexport default WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js"],"names":["React","ReactWordcloud","randomIntFromInterval","min","max","Math","floor","random","options","rotations","WordCloud","phrases","newArray","map","string","text","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CAEA;AACA;AAEA;AACA;AACA;;;;AAGA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AAAE;AACvC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;AAEH,MAAMK,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE,CADC,CAEZ;;AAFY,CAAhB;;AAKA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AAC5B,MAAIA,OAAJ,EAAa;AACX;AACA,QAAIC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI;AACnC,aAAO;AAACC,QAAAA,IAAI,EAAED,MAAP;AAAeE,QAAAA,KAAK,EAAEd,qBAAqB,CAAC,EAAD,EAAK,EAAL;AAA3C,OAAP;AACD,KAFc,CAAf;AAGD,GALD,MAMK;AACH,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,SAAxB;AAAkC,IAAA,KAAK,EAAEU;AAAzC;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;KAZQF,S;AAcT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n \n// var wordsArray = ['text', 'mistake', 'thought', 'bad']\n// var newArray = wordsArray.map(myFunction)\n\n// function myFunction(string) {\n//     return {text: string, value: randomIntFromInterval(20, 65)}\n// }\n\n\nfunction randomIntFromInterval(min, max) { // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\nconst options = {\n    rotations: 0,\n    // rotationAngles: [-90, 0],\n};\n \nfunction WordCloud({phrases}) {\n  if (phrases) {\n    // var newArray= phrases.map(myFunction) \n    var newArray = phrases.map(string => {\n      return {text: string, value: randomIntFromInterval(20, 65)}\n    });\n  }\n  else {\n    return <div>....is loading</div>\n  }\n  return <ReactWordcloud options=\"options\" words={newArray} />\n\n}\n\nexport default WordCloud;"]},"metadata":{},"sourceType":"module"}