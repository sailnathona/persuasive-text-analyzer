{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport DisplayUpper from './DisplayUpper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false); // const handleSubmit = (e) => {\n  //   setSubmitted(true)  // won't work this way\n  //   console.log(\"button clicked\");\n  //   axios\n  //     .post(\"http://localhost:5000\", {\n  //       text: text,\n  //     }.json)\n  //     .then((res) => {\n  //       console.log(\"res\", res);\n  //       setFetchedData(res.data); // whatever the data you want to set in the setFetchedData you can set with res\n  //     })\n  //     .catch((er) => {\n  //       console.log(er);\n  //     });\n  //   }\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //\n\n    const response = await axios.post(\"http://localhost:5000\", {\n      text\n    });\n    console.log(response);\n    console.log(response.data);\n    setFetchedData(response.data);\n  };\n\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(DisplayUpper, {\n      prop: fetchedData,\n      fetch: setFetchedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Text :\", /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          variant: \"outlined\",\n          name: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          rows: 5,\n          cols: 20,\n          placeholder: \"Enter up to 500 words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        name: \"Submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewForm, \"sbs26nnsA+ulR3AAYMEw9qpyVcI=\");\n\n_c = NewForm;\nexport default NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js"],"names":["React","useState","axios","Button","TextField","DisplayUpper","NewForm","props","text","setText","fetchedData","setFetchedData","isSubmitted","setSubmitted","handleSubmit","event","preventDefault","response","post","console","log","data","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,YAAd,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C,CAHsB,CAMtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEE,QAAMa,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAGlC;;AACA,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,uBAAX,EAAoC;AAACV,MAAAA;AAAD,KAApC,CAAvB;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAV,IAAAA,cAAc,CAACM,QAAQ,CAACI,IAAV,CAAd;AAED,GAVD;;AAaF,MAAIT,WAAJ,EAAiB;AACf,wBAAO,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEF,WAApB;AAAiC,MAAA,KAAK,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAA8B,MAAA,MAAM,EAAC,MAArC;AAAA,8BACE;AAAA,gDAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAE,IAAtB;AAA4B,UAAA,OAAO,EAAC,UAApC;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEN,IAFT;AAGE,UAAA,QAAQ,EAAGc,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAIE,UAAA,IAAI,EAAE,CAJR;AAKE,UAAA,IAAI,EAAE,EALR;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,IAAI,EAAC,QAAnD;AAA4D,QAAA,IAAI,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBG;;GA9DIlB,O;;KAAAA,O;AAiET,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport DisplayUpper from './DisplayUpper';\n\n\nfunction NewForm(props) {\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  \n\n  // const handleSubmit = (e) => {\n  //   setSubmitted(true)  // won't work this way\n    \n  //   console.log(\"button clicked\");\n  //   axios\n  //     .post(\"http://localhost:5000\", {\n  //       text: text,\n  //     }.json)\n  //     .then((res) => {\n  //       console.log(\"res\", res);\n  //       setFetchedData(res.data); // whatever the data you want to set in the setFetchedData you can set with res\n  //     })\n  //     .catch((er) => {\n  //       console.log(er);\n  //     });\n      \n  //   }\n\n    const handleSubmit = async event => {\n      event.preventDefault();\n    \n      //\n      const response = await axios.post(\"http://localhost:5000\", {text})\n    \n      console.log(response);\n      console.log(response.data);\n      setFetchedData(response.data);\n    \n    };\n  \n  \n  if (isSubmitted) {\n    return <DisplayUpper prop={fetchedData} fetch={setFetchedData}/>\n  }\n  return (\n    <div>\n    <form onSubmit={handleSubmit} method=\"post\">\n      <label>\n        Enter Text :\n        <TextField multiline={true} variant=\"outlined\"\n          name=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          rows={5}\n          cols={20}\n          placeholder=\"Enter up to 500 words\"\n        />\n      </label>\n      {/* <br /> */}\n      <Button variant=\"contained\" color=\"secondary\" type=\"submit\" name=\"Submit\">\n        SUBMIT\n      </Button>\n    </form>\n    {/* {isSubmitted && <DisplayUpper/>} */}\n    </div> \n    );\n    }\n\n\nexport default NewForm;"]},"metadata":{},"sourceType":"module"}