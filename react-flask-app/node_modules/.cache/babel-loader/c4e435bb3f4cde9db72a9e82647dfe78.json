{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport DisplayUpper from './DisplayUpper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    console.log(\"button clicked\");\n    const config = {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post(\"http://localhost:5000/process\", {\n      text: text\n    }, config).then(res => {\n      console.log(\"res\", res);\n      setFetchedData(res.data); // whatever the data you want to set in the setFetchedData you can set with res\n    }).catch(er => {\n      console.log(er.response.data);\n    });\n  }; // const handleSubmit = async event => {\n  //   event.preventDefault();\n  //   //\n  //   const response = await axios.post(\"http://localhost:5000\", {text}).then((response) => {\n  //     setFetchedData(response.data)}).catch((er) => {\n  //             console.log(er);\n  //     });\n  //   console.log(response);\n  //   console.log(response.data);\n  // };\n  // Add a function that will return N characters, wrapped inside JSX, where N is the length of the input in the textarea\n\n\n  function displayLength() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length, \" characters!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  function validateFieldLength() {\n    if (submitDisabled && text.length > 100) {\n      setSubmitDisabled(false);\n    } else if (!submitDisabled && text.length <= 100) {\n      setSubmitDisabled(true);\n    }\n  } // the function called upon onChange\n\n\n  const updateFieldLength = e => (setText(e.target.value), () => validateFieldLength());\n\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(DisplayUpper, {\n      prop: fetchedData.value1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        multiline: true,\n        variant: \"outlined\",\n        name: \"text\",\n        value: text // onChange={(e) => setText(e.target.value)}\n        ,\n        onChange: updateFieldLength,\n        cols: 80,\n        rows: 25,\n        placeholder: \"Enter text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: submitDisabled,\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        name: \"Submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), displayLength()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewForm, \"RQ1buROzcAjFpUVZoT4LYAOaigI=\");\n\n_c = NewForm;\nexport default NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js"],"names":["React","useState","axios","Button","TextField","DisplayUpper","NewForm","props","text","setText","fetchedData","setFetchedData","isSubmitted","setSubmitted","submitDisabled","setSubmitDisabled","handleSubmit","e","preventDefault","console","log","config","headers","post","then","res","data","catch","er","response","displayLength","length","validateFieldLength","updateFieldLength","target","value","value1"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport DisplayUpper from './DisplayUpper';\n\n\nfunction NewForm(props) {\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true) \n    \n    console.log(\"button clicked\");\n\n    const config = {\n      headers: {'Access-Control-Allow-Origin': '*'}\n  };\n\n    axios\n      .post(\"http://localhost:5000/process\", {\n        text: text,\n      }, config)\n      .then((res) => {\n        console.log(\"res\", res);\n        setFetchedData(res.data); // whatever the data you want to set in the setFetchedData you can set with res\n      })\n      .catch((er) => {\n        console.log(er.response.data);\n      });\n      \n    }\n\n    // const handleSubmit = async event => {\n    //   event.preventDefault();\n    \n    //   //\n    //   const response = await axios.post(\"http://localhost:5000\", {text}).then((response) => {\n    //     setFetchedData(response.data)}).catch((er) => {\n    //             console.log(er);\n    //     });\n    \n    //   console.log(response);\n    //   console.log(response.data);\n  \n    \n    // };\n\n  // Add a function that will return N characters, wrapped inside JSX, where N is the length of the input in the textarea\n  function displayLength() {\n    return (\n      <div>\n        <p>{text.length} characters!</p>\n      </div>\n    )\n  }\n\n  function validateFieldLength() {\n    if (submitDisabled && text.length > 100) {\n      setSubmitDisabled(false);\n    } else if (!submitDisabled && text.length <= 100) {\n      setSubmitDisabled(true);\n    }\n  }\n\n  // the function called upon onChange\n  const updateFieldLength = e => (\n    setText(e.target.value), () => (\n      validateFieldLength()\n    )\n  )\n   \n  \n  if (isSubmitted) {\n    return <DisplayUpper prop={fetchedData.value1} />\n  }\n  return (\n    <div>\n    <form onSubmit={handleSubmit} method=\"post\">\n      {/* <label>\n        Enter Text : */}\n        <TextField multiline={true} variant=\"outlined\"\n          name=\"text\"\n          value={text}\n          // onChange={(e) => setText(e.target.value)}\n          onChange={updateFieldLength}\n          cols={80}\n          rows={25}\n          placeholder=\"Enter text\"\n        />\n      {/* </label> */}\n      <br />\n      <Button disabled = {submitDisabled} variant=\"contained\" color=\"secondary\" type=\"submit\" name=\"Submit\">\n        SUBMIT\n      </Button>\n    </form>\n    {displayLength()}\n    {/* {isSubmitted && <DisplayUpper/>} */}\n    </div> \n    );\n    }\n\n\nexport default NewForm;"]},"metadata":{},"sourceType":"module"}