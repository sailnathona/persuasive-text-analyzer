{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js\";\nimport React from 'react';\nimport TagCloud from 'react-tag-cloud';\nimport randomColor from 'randomcolor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar wordsArray = ['text', 'mistake', 'laptop']; // // var newArray = wordsArray.map(myFunction)\n// // function myFunction(string) {\n// //     return {text: string, value: randomIntFromInterval(20, 65)}\n// // }\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n} // function WordCloud({phrases}) {\n//   // if (phrases) {\n//   //   var newArray = phrases.map(string => {\n//   //     return {text: string, value: randomIntFromInterval(20, 65)}\n//   //   });\n//   // }\n//   // else {\n//   //   return <div>....is loading</div>\n//   // }\n//   return <ReactWordcloud options={options} words={wordsArray} />\n// }\n\n\nfunction WordCloud(phrases) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TagCloud, {\n      style: {\n        fontFamily: 'sans-serif',\n        fontSize: randomIntFromInterval(),\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n        color: () => randomColor(),\n        padding: 5,\n        width: '100%',\n        height: '100%'\n      },\n      children: [\"if (wordsArray)\", wordsArray.map(string => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: string\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 4\n  }, this);\n}\n\n_c = WordCloud;\nexport default WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js"],"names":["React","TagCloud","randomColor","wordsArray","randomIntFromInterval","min","max","Math","floor","random","WordCloud","phrases","fontFamily","fontSize","fontWeight","fontStyle","color","padding","width","height","map","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAGA,IAAIC,UAAU,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAjB,C,CACA;AAEA;AACA;AACA;;AAGA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AAAE;AACvC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,C,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,SAASK,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,sBACC;AAAA,2BACM,QAAC,QAAD;AACC,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,YADP;AAELC,QAAAA,QAAQ,EAAET,qBAAqB,EAF1B;AAGLU,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,SAAS,EAAE,QAJN;AAKLC,QAAAA,KAAK,EAAE,MAAMd,WAAW,EALnB;AAMLe,QAAAA,OAAO,EAAE,CANJ;AAOLC,QAAAA,KAAK,EAAE,MAPF;AAQLC,QAAAA,MAAM,EAAE;AARH,OADR;AAAA,oCAYIhB,UAAU,CAACiB,GAAX,CAAeC,MAAM,iBAClB;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADH,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADD;AAsBD;;KAvBQX,S;AAyBT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport TagCloud from 'react-tag-cloud';\nimport randomColor from 'randomcolor';\n\n\nvar wordsArray = ['text', 'mistake', 'laptop']\n// // var newArray = wordsArray.map(myFunction)\n\n// // function myFunction(string) {\n// //     return {text: string, value: randomIntFromInterval(20, 65)}\n// // }\n\n\nfunction randomIntFromInterval(min, max) { // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n \n// function WordCloud({phrases}) {\n//   // if (phrases) {\n//   //   var newArray = phrases.map(string => {\n//   //     return {text: string, value: randomIntFromInterval(20, 65)}\n//   //   });\n//   // }\n//   // else {\n//   //   return <div>....is loading</div>\n//   // }\n//   return <ReactWordcloud options={options} words={wordsArray} />\n\n// }\n\nfunction WordCloud(phrases) {\n  return (\n   <div>\n         <TagCloud\n          style={{\n            fontFamily: 'sans-serif',\n            fontSize: randomIntFromInterval(),\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n            color: () => randomColor(),\n            padding: 5,\n            width: '100%',\n            height: '100%'\n          }}>\n            if (wordsArray)\n            {wordsArray.map(string => (\n                <div>{string}</div>\n                ))}\n            \n\n        </TagCloud>\n    </div>\n  );\n}\n\nexport default WordCloud;"]},"metadata":{},"sourceType":"module"}