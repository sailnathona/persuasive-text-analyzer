{"ast":null,"code":"import React from 'react'; // import ReactWordcloud from 'react-wordcloud';\n// var wordsArray = ['text', 'mistake', 'thought', 'bad']\n// var newArray = wordsArray.map(myFunction)\n// function myFunction(string) {\n//     return {text: string, value: randomIntFromInterval(20, 65)}\n// }\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction WordCloud({\n  phrases\n}) {\n  if (phrases) {\n    // var newArray= phrases.map(myFunction) \n    var newArray = phrases.map(string => {\n      return {\n        text: string,\n        value: randomIntFromInterval(20, 65)\n      };\n    });\n  } // return <ReactWordcloud words={newArray} />\n\n}\n\n_c = WordCloud;\nexport default WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/WordCloud.js"],"names":["React","randomIntFromInterval","min","max","Math","floor","random","WordCloud","phrases","newArray","map","string","text","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AAAE;AACvC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;AAEH,SAASK,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AAC5B,MAAIA,OAAJ,EAAa;AACX;AACA,QAAIC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI;AACnC,aAAO;AAACC,QAAAA,IAAI,EAAED,MAAP;AAAeE,QAAAA,KAAK,EAAEZ,qBAAqB,CAAC,EAAD,EAAK,EAAL;AAA3C,OAAP;AACD,KAFc,CAAf;AAGD,GAN2B,CAO5B;;AAED;;KATQM,S;AAWT,eAAeA,SAAf","sourcesContent":["import React from 'react';\n// import ReactWordcloud from 'react-wordcloud';\n \n// var wordsArray = ['text', 'mistake', 'thought', 'bad']\n// var newArray = wordsArray.map(myFunction)\n\n// function myFunction(string) {\n//     return {text: string, value: randomIntFromInterval(20, 65)}\n// }\n\nfunction randomIntFromInterval(min, max) { // min and max included \n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n \nfunction WordCloud({phrases}) {\n  if (phrases) {\n    // var newArray= phrases.map(myFunction) \n    var newArray = phrases.map(string => {\n      return {text: string, value: randomIntFromInterval(20, 65)}\n    });\n  }\n  // return <ReactWordcloud words={newArray} />\n\n}\n\nexport default WordCloud;"]},"metadata":{},"sourceType":"module"}