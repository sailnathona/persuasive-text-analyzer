{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./form.css\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  const [isLoading, setLoading] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    console.log(\"button clicked\");\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    };\n    axios.post(\"http://localhost:5000/process\", {\n      text: text\n    }, config).then(res => {\n      console.log(\"res\", res);\n      setFetchedData(res.data);\n      setLoading(false);\n    }).catch(er => {\n      console.log(er.response.data);\n    });\n  };\n\n  function displayLength() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.length, \" characters!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isSubmitted) {\n    return isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      pathos: fetchedData.pathos,\n      logos: fetchedData.logos,\n      ethos: fetchedData.ethos,\n      subj_score: fetchedData.subj_score,\n      num_questions: fetchedData.num_questions,\n      phrases_array: fetchedData.phrases,\n      avg_len: fetchedData.avg_len,\n      uncommon: fetchedData.uncommon_percent,\n      repeats: fetchedData.repeats,\n      count_ands: fetchedData.count_and,\n      i_versus_we: fetchedData.i_versus_we\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Input text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Must be at least 100 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          variant: \"outlined\",\n          name: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          cols: 25,\n          rows: 10,\n          placeholder: \"Enter text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: text.length <= 3,\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        name: \"Submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), displayLength()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewForm, \"JOF8xpsJWVlcVtFpepPgTovp09k=\");\n\n_c = NewForm;\nexport default NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/NewForm.js"],"names":["React","useState","axios","Button","TextField","Dashboard","LoadingSpinner","FaGithub","NewForm","text","setText","fetchedData","setFetchedData","isSubmitted","setSubmitted","submitDisabled","setSubmitDisabled","isLoading","setLoading","handleSubmit","e","preventDefault","console","log","config","headers","post","then","res","data","catch","er","response","displayLength","length","pathos","logos","ethos","subj_score","num_questions","phrases","avg_len","uncommon_percent","repeats","count_and","i_versus_we","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Dashboard from \"./Dashboard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nimport \"./form.css\";\nimport { FaGithub } from \"react-icons/fa\";\n\nfunction NewForm() {\n  const [text, setText] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [isSubmitted, setSubmitted] = useState(false);\n\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  const [isLoading, setLoading] = useState(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n\n    console.log(\"button clicked\");\n\n    const config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    axios\n      .post(\n        \"http://localhost:5000/process\",\n        {\n          text: text,\n        },\n        config\n      )\n      .then((res) => {\n        console.log(\"res\", res);\n        setFetchedData(res.data);\n        setLoading(false);\n      })\n      .catch((er) => {\n        console.log(er.response.data);\n      });\n  };\n\n  function displayLength() {\n    return (\n      <div>\n        <p>{text.length} characters!</p>\n      </div>\n    );\n  }\n\n  if (isSubmitted) {\n    return isLoading ? (\n      <LoadingSpinner />\n    ) : (\n      <Dashboard\n        pathos={fetchedData.pathos}\n        logos={fetchedData.logos}\n        ethos={fetchedData.ethos}\n        subj_score={fetchedData.subj_score}\n        num_questions={fetchedData.num_questions}\n        phrases_array={fetchedData.phrases}\n        avg_len={fetchedData.avg_len}\n        uncommon={fetchedData.uncommon_percent}\n        repeats={fetchedData.repeats}\n        count_ands={fetchedData.count_and}\n        i_versus_we={fetchedData.i_versus_we}\n      />\n    );\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit} method=\"post\">\n        <label>\n          <strong>Input text: </strong>\n          <br />\n          <small>Must be at least 100 characters.</small>\n          <br />\n          <TextField\n            multiline={true}\n            variant=\"outlined\"\n            name=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            cols={25}\n            rows={10}\n            placeholder=\"Enter text\"\n          />\n        </label>\n        <br />\n        <Button\n          disabled={text.length <= 3}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          name=\"Submit\"\n        >\n          SUBMIT\n        </Button>\n      </form>\n      {displayLength()}\n      {/* {isSubmitted && <Dashboard/>} */}\n    </div>\n  );\n}\n\nexport default NewForm;\n"]},"metadata":{},"sourceType":"module"}