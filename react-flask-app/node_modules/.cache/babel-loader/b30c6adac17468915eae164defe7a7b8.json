{"ast":null,"code":"var _jsxFileName = \"/Users/shinny/Desktop/ExpertAI/react-flask-app/src/PieChartPer.js\";\nimport React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nfunction PieChartPer() {\n  // value will need to be percent of uncommon words\n  const data01 = [{\n    name: \"Uncommon Words\",\n    value: 300\n  }]; // let valu_uncommon = data01[0][\"value\"];\n  // let remaining = { name: \"Remainder\", value: 100 - valu_uncommon };\n  // data01.push(remaining);\n  // // value will need to be percent of repeated words\n\n  const data02 = [{\n    name: \"% uncommon repeats\",\n    value: 200\n  }]; // let valuRepeats = data02[0][\"value\"];\n  // let totalUncommon = { name: \"Remainder\", value: 100 - valuRepeats };\n  // data02.push(totalUncommon);\n\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 800,\n    height: 400,\n    onMouseEnter: this.onPieEnter,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: data01,\n      dataKey: \"value\",\n      cx: 180,\n      cy: 200,\n      outerRadius: 50,\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: data02,\n      cx: 180,\n      cy: 200,\n      innerRadius: 60,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      paddingAngle: 5,\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PieChartPer;\nexport default PieChartPer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChartPer\");","map":{"version":3,"sources":["/Users/shinny/Desktop/ExpertAI/react-flask-app/src/PieChartPer.js"],"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","Legend","COLORS","PieChartPer","data01","name","value","data02","onPieEnter","data","map","entry","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,mBALF,EAMEC,MANF,QAOO,UAPP;;AAUA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;;AAEA,SAASC,WAAT,GAAuB;AAErB;AACF,QAAMC,MAAM,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAAD,CAAf,CAHuB,CAKvB;AACA;AAEA;AAEA;;AACA,QAAMC,MAAM,GAAG,CAAC;AAAEF,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAAD,CAAf,CAXuB,CAavB;AACA;AAEA;;AAEE,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAmC,IAAA,YAAY,EAAE,KAAKE,UAAtD;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAEJ,MADR;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,EAAE,EAAE,GAHN;AAIE,MAAA,EAAE,EAAE,GAJN;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AACE,MAAA,IAAI,EAAEG,MADR;AAEE,MAAA,EAAE,EAAE,GAFN;AAGE,MAAA,EAAE,EAAE,GAHN;AAIE,MAAA,WAAW,EAAE,EAJf;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,YAAY,EAAE,CAPhB;AAQE,MAAA,OAAO,EAAC,OARV;AAAA,gBAUGE,IAAI,CAACC,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAA4B,QAAA,IAAI,EAAEV,MAAM,CAACU,KAAK,GAAGV,MAAM,CAACW,MAAhB;AAAxC,SAAY,QAAOD,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YATF,eAuBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;KA7CQT,W;AA+CT,eAAeA,WAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Sector,\n  Cell,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\n\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nfunction PieChartPer() {\n\n  // value will need to be percent of uncommon words\nconst data01 = [{ name: \"Uncommon Words\", value: 300 }];\n\n// let valu_uncommon = data01[0][\"value\"];\n// let remaining = { name: \"Remainder\", value: 100 - valu_uncommon };\n\n// data01.push(remaining);\n\n// // value will need to be percent of repeated words\nconst data02 = [{ name: \"% uncommon repeats\", value: 200 }];\n\n// let valuRepeats = data02[0][\"value\"];\n// let totalUncommon = { name: \"Remainder\", value: 100 - valuRepeats };\n\n// data02.push(totalUncommon);\n\n  return (\n    <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n      <Pie\n        data={data01}\n        dataKey=\"value\"\n        cx={180}\n        cy={200}\n        outerRadius={50}\n        fill=\"#8884d8\"\n      />\n      <Pie\n        data={data02}\n        cx={180}\n        cy={200}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        paddingAngle={5}\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Legend />\n    </PieChart>\n  );\n}\n\nexport default PieChartPer;\n"]},"metadata":{},"sourceType":"module"}